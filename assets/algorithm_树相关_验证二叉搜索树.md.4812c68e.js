import{_ as a,c as n,a as l,o}from"./app.6b73df09.js";const i=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"algorithm/\u6811\u76F8\u5173/\u9A8C\u8BC1\u4E8C\u53C9\u641C\u7D22\u6811.md"}'),p={name:"algorithm/\u6811\u76F8\u5173/\u9A8C\u8BC1\u4E8C\u53C9\u641C\u7D22\u6811.md"};function e(c,s,t,r,y,F){return o(),n("div",null,s[0]||(s[0]=[l(`<p><a href="https://leetcode.cn/problems/validate-binary-search-tree/" target="_blank" rel="noreferrer">98. \u9A8C\u8BC1\u4E8C\u53C9\u641C\u7D22\u6811</a></p><blockquote><p>\u9898\u76EE\u63CF\u8FF0\uFF1A\u7ED9\u5B9A\u4E00\u4E2A\u4E8C\u53C9\u6811\uFF0C\u5224\u65AD\u5176\u662F\u5426\u662F\u4E00\u4E2A\u6709\u6548\u7684\u4E8C\u53C9\u641C\u7D22\u6811\u3002 \u5047\u8BBE\u4E00\u4E2A\u4E8C\u53C9\u641C\u7D22\u6811\u5177\u6709\u5982\u4E0B\u7279\u5F81\uFF1A \u8282\u70B9\u7684\u5DE6\u5B50\u6811\u53EA\u5305\u542B\u5C0F\u4E8E\u5F53\u524D\u8282\u70B9\u7684\u6570\u3002 \u8282\u70B9\u7684\u53F3\u5B50\u6811\u53EA\u5305\u542B\u5927\u4E8E\u5F53\u524D\u8282\u70B9\u7684\u6570\u3002 \u6240\u6709\u5DE6\u5B50\u6811\u548C\u53F3\u5B50\u6811\u81EA\u8EAB\u5FC5\u987B\u4E5F\u662F\u4E8C\u53C9\u641C\u7D22\u6811\u3002</p></blockquote><blockquote><p>\u793A\u4F8B 1: \u8F93\u5165:</p></blockquote><div class="language-markdown"><button class="copy"></button><span class="lang">markdown</span><pre><code><span class="line"><span style="color:#A6ACCD;">markdown</span></span>
<span class="line"><span style="color:#A6ACCD;">\u590D\u5236\u4EE3\u7801    2</span></span>
<span class="line"><span style="color:#A6ACCD;">   / \\</span></span>
<span class="line"><span style="color:#A6ACCD;">  1   3</span></span>
<span class="line"></span></code></pre></div><blockquote><p>\u8F93\u51FA: true</p></blockquote><blockquote><p>\u793A\u4F8B 2: \u8F93\u5165:</p></blockquote><div class="language-markdown"><button class="copy"></button><span class="lang">markdown</span><pre><code><span class="line"><span style="color:#A6ACCD;">markdown</span></span>
<span class="line"><span style="color:#A6ACCD;">\u590D\u5236\u4EE3\u7801    5</span></span>
<span class="line"><span style="color:#A6ACCD;">   / \\</span></span>
<span class="line"><span style="color:#A6ACCD;">  1   4</span></span>
<span class="line"><span style="color:#A6ACCD;">     / \\</span></span>
<span class="line"><span style="color:#A6ACCD;">    3   6</span></span>
<span class="line"></span></code></pre></div><blockquote><p>\u8F93\u51FA: false \u89E3\u91CA: \u8F93\u5165\u4E3A: [5,1,4,null,null,3,6]\u3002 \u6839\u8282\u70B9\u7684\u503C\u4E3A 5 \uFF0C\u4F46\u662F\u5176\u53F3\u5B50\u8282\u70B9\u503C\u4E3A 4 \u3002</p></blockquote><h4 id="\u601D\u8DEF\u5206\u6790" tabindex="-1">\u601D\u8DEF\u5206\u6790 <a class="header-anchor" href="#\u601D\u8DEF\u5206\u6790" aria-hidden="true">#</a></h4><p>\u5BF9\u4E8E\u8FD9\u9053\u9898\uFF0C\u6211\u4EEC\u9700\u8981\u597D\u597D\u5480\u56BC\u4E00\u4E0B\u4E8C\u53C9\u641C\u7D22\u6811\u7684\u5B9A\u4E49\uFF1A</p><ol><li>\u5B83\u53EF\u4EE5\u662F\u4E00\u68F5\u7A7A\u6811</li><li>\u5B83\u53EF\u4EE5\u662F\u4E00\u68F5\u7531\u6839\u7ED3\u70B9\u3001\u5DE6\u5B50\u6811\u3001\u53F3\u5B50\u6811\u7EC4\u6210\u7684\u6811\uFF0C\u540C\u65F6\u5DE6\u5B50\u6811\u548C\u53F3\u5B50\u6811\u90FD\u662F\u4E8C\u53C9\u641C\u7D22\u6811\uFF0C\u4E14<strong>\u5DE6\u5B50\u6811</strong>\u4E0A\u6240\u6709\u7ED3\u70B9\u7684\u6570\u636E\u57DF\u90FD<strong>\u5C0F\u4E8E\u7B49\u4E8E</strong>\u6839\u7ED3\u70B9\u7684\u6570\u636E\u57DF\uFF0C<strong>\u53F3\u5B50\u6811</strong>\u4E0A\u6240\u6709\u7ED3\u70B9\u7684\u6570\u636E\u57DF\u90FD<strong>\u5927\u4E8E\u7B49\u4E8E</strong>\u6839\u7ED3\u70B9\u7684\u6570\u636E\u57DF</li></ol><p>\u53EA\u6709\u7B26\u5408\u4EE5\u4E0A\u4E24\u79CD\u60C5\u51B5\u4E4B\u4E00\u7684\u4E8C\u53C9\u6811\uFF0C\u53EF\u4EE5\u79F0\u4E4B\u4E3A\u4E8C\u53C9\u641C\u7D22\u6811\u3002 \u7A7A\u6811\u7684\u5224\u5B9A\u6BD4\u8F83\u7B80\u5355\uFF0C\u5173\u952E\u5728\u4E8E\u975E\u7A7A\u6811\u7684\u5224\u5B9A\uFF1A\u9700\u8981\u9012\u5F52\u5730\u5BF9\u975E\u7A7A\u6811\u4E2D\u7684\u5DE6\u53F3\u5B50\u6811\u8FDB\u884C\u904D\u5386\uFF0C\u68C0\u9A8C\u6BCF\u68F5\u5B50\u6811\u4E2D\u662F\u5426\u90FD\u6EE1\u8DB3 <code>\u5DE6 &lt; \u6839 &lt; \u53F3</code> \u8FD9\u6837\u7684\u5173\u7CFB\uFF08\u6CE8\u610F\u9898\u4E2D\u58F0\u660E\u4E86\u4E0D\u9700\u8981\u8003\u8651\u76F8\u7B49\u60C5\u51B5\uFF09\u3002 \u57FA\u4E8E\u8FD9\u6837\u7684\u601D\u8DEF\uFF0C\u6211\u4EEC\u53EF\u4EE5\u7F16\u7801\u5982\u4E0B\uFF1A</p><h4 id="\u7F16\u7801\u5B9E\u73B0" tabindex="-1">\u7F16\u7801\u5B9E\u73B0 <a class="header-anchor" href="#\u7F16\u7801\u5B9E\u73B0" aria-hidden="true">#</a></h4><div class="language-js"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#676E95;">/**</span></span>
<span class="line"><span style="color:#676E95;"> * Definition for a binary tree node.</span></span>
<span class="line"><span style="color:#676E95;"> * function TreeNode(val, left, right) {</span></span>
<span class="line"><span style="color:#676E95;"> *     this.val = (val===undefined ? 0 : val)</span></span>
<span class="line"><span style="color:#676E95;"> *     this.left = (left===undefined ? null : left)</span></span>
<span class="line"><span style="color:#676E95;"> *     this.right = (right===undefined ? null : right)</span></span>
<span class="line"><span style="color:#676E95;"> * }</span></span>
<span class="line"><span style="color:#676E95;"> */</span></span>
<span class="line"><span style="color:#676E95;">/**</span></span>
<span class="line"><span style="color:#676E95;"> * </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">param</span><span style="color:#676E95;"> </span><span style="color:#89DDFF;">{</span><span style="color:#FFCB6B;">TreeNode</span><span style="color:#89DDFF;">}</span><span style="color:#676E95;"> </span><span style="color:#A6ACCD;">root</span></span>
<span class="line"><span style="color:#676E95;"> * </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">return</span><span style="color:#676E95;"> </span><span style="color:#89DDFF;">{</span><span style="color:#FFCB6B;">boolean</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;"> */</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> isValidBST </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">dfs</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">min</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">max</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">root</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">val</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">min</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">||</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">val</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&gt;=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">max</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">false</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">dfs</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">left</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">min</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">val</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">dfs</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">right</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">val</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">max</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">dfs</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-Infinity,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">Infinity</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre></div><h4 id="\u7F16\u7801\u590D\u76D8" tabindex="-1">\u7F16\u7801\u590D\u76D8 <a class="header-anchor" href="#\u7F16\u7801\u590D\u76D8" aria-hidden="true">#</a></h4><p>\u8FD9\u4E2A\u9898\u7684\u7F16\u7801\u5B9E\u73B0\u6BD4\u8F83\u6709\u610F\u601D\uFF0C\u5BF9 <code>minValue</code> \u548C <code>maxValue</code> \u7684\u5904\u7406\u503C\u5F97\u6211\u4EEC\u53CD\u520D\u4E00\u4E0B\uFF1A</p><p>\u9012\u5F52\u8FC7\u7A0B\u4E2D\uFF0C\u8D77\u5230\u51B3\u5B9A\u6027\u4F5C\u7528\u7684\u662F\u8FD9\u4E24\u4E2A\u5224\u5B9A\u6761\u4EF6\uFF1A</p><ul><li>\u5DE6\u5B69\u5B50\u7684\u503C\u662F\u5426\u5C0F\u4E8E\u6839\u7ED3\u70B9\u503C</li><li>\u53F3\u5B69\u5B50\u7684\u503C\u662F\u5426\u5927\u4E8E\u6839\u7ED3\u70B9\u503C</li></ul><p>\u5728\u9012\u5F52\u5F0F\u4E2D\uFF0C\u5982\u679C\u5355\u72EC\u7EF4\u62A4\u4E00\u6BB5\u903B\u8F91\uFF0C\u7528\u4E8E\u5224\u5B9A\u5F53\u524D\u662F\u5DE6\u5B69\u5B50\u8FD8\u662F\u53F3\u5B69\u5B50\uFF0C\u8FDB\u800C\u51B3\u5B9A\u662F\u8FDB\u884C\u5927\u4E8E\u5224\u5B9A\u8FD8\u662F\u5C0F\u4E8E\u5224\u5B9A\uFF0C\u4E5F\u662F\u6CA1\u95EE\u9898\u7684\u3002\u4F46\u662F\u5728\u4E0A\u9762\u7684\u7F16\u7801\u4E2D\u6211\u4EEC\u91C7\u53D6\u4E86\u4E00\u79CD\u66F4\u7B80\u6D01\u7684\u624B\u6CD5\uFF0C\u901A\u8FC7\u8BBE\u7F6E <code>minValue</code> \u548C <code>maxValue</code> \u4E3A\u6781\u5C0F\u548C\u6781\u5927\u503C\uFF0C\u6765\u786E\u4FDD <code>root.val &lt;= minValue || root.val &gt;= maxValue</code> \u8FD9\u4E24\u4E2A\u6761\u4EF6\u4E2D\u6709\u4E00\u4E2A\u662F\u4E00\u5B9A\u4E3A <code>false</code> \u7684\u3002</p><p>\u6BD4\u5982\u5F53\u524D\u6211\u9700\u8981\u68C0\u67E5\u7684\u662F<code>root</code> \u7684\u5DE6\u5B69\u5B50\uFF0C\u90A3\u4E48\u5C31\u4F1A\u8FDB\u5165 <code>dfs(root.left, minValue,root.val)</code> \u8FD9\u6BB5\u903B\u8F91\u3002\u8FD9\u4E2A<code>dfs</code>\u8C03\u7528\u5C06\u6700\u5927\u503C\u66F4\u65B0\u4E3A\u4E86<code>root</code>\u6839\u7ED3\u70B9\u7684\u503C\uFF0C\u5C06\u5F53\u524D<code>root</code>\u7ED3\u70B9\u66F4\u65B0\u4E3A\u4E86\u5DE6\u5B69\u5B50\u7ED3\u70B9\uFF0C\u540C\u65F6\u4FDD\u6301\u6700\u5C0F\u503C\u4E3A <code>-Infinity</code> \u4E0D\u53D8\u3002\u8FDB\u5165 <code>dfs</code>\u903B\u8F91\u540E\uFF0C<code>root.val &lt;= minValue || root.val &gt;= maxValue</code> \u4E2D\u7684 <code>root.val &lt;= minValue</code> \u4E00\u5B9A\u4E3A <code>false</code> \uFF0C\u8D77\u51B3\u5B9A\u6027\u4F5C\u7528\u7684\u6761\u4EF6\u5B9E\u9645\u662F <code>root.val &gt;= maxValue</code>\uFF08\u8FD9\u91CC\u8FD9\u4E2A <code>maxValue</code> \u6B63\u662F\u6839\u7ED3\u70B9\u7684\u6570\u636E\u57DF\u503C)\u3002\u82E5<code>root.val &gt;= maxValue</code>\u8FD4\u56DE <code>true</code>\uFF0C\u5C31\u610F\u5473\u7740\u5DE6\u5B69\u5B50\u7684\u503C\u5927\u4E8E\u7B49\u4E8E\uFF08\u4E5F\u5C31\u662F\u4E0D\u5C0F\u4E8E\uFF09\u6839\u7ED3\u70B9\u7684\u6570\u636E\u57DF\u503C\uFF0C\u8FD9\u663E\u7136\u662F\u4E0D\u5408\u6CD5\u7684\u3002\u6B64\u65F6\u6574\u4E2A\u6216\u8BED\u53E5\u90FD\u4F1A\u8FD4\u56DE<code>true</code>\uFF0C\u9012\u5F52\u5F0F\u8FD4\u56DE<code>false</code>\uFF0C\u4E8C\u53C9\u641C\u7D22\u6811\u8FDB\u800C\u4F1A\u88AB\u5224\u5B9A\u4E3A\u4E0D\u5408\u6CD5\u3002</p>`,20)]))}const d=a(p,[["render",e]]);export{i as __pageData,d as default};
