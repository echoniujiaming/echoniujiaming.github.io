import{_ as n,c as a,a as l,o as p}from"./app.6b73df09.js";const i=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":3,"title":"\u601D\u8DEF\u5206\u6790","slug":"\u601D\u8DEF\u5206\u6790","link":"#\u601D\u8DEF\u5206\u6790","children":[]},{"level":3,"title":"\u7F16\u7801\u5B9E\u73B0","slug":"\u7F16\u7801\u5B9E\u73B0","link":"#\u7F16\u7801\u5B9E\u73B0","children":[]}],"relativePath":"algorithm/\u6811\u76F8\u5173/\u5C06\u4E8C\u53C9\u641C\u7D22\u6811\u53D8\u5E73\u8861.md"}'),o={name:"algorithm/\u6811\u76F8\u5173/\u5C06\u4E8C\u53C9\u641C\u7D22\u6811\u53D8\u5E73\u8861.md"};function e(t,s,r,c,y,F){return p(),a("div",null,s[0]||(s[0]=[l(`<p><a href="https://leetcode.cn/problems/balance-a-binary-search-tree/" target="_blank" rel="noreferrer">1382. \u5C06\u4E8C\u53C9\u641C\u7D22\u6811\u53D8\u5E73\u8861</a></p><blockquote><p>\u9898\u76EE\u63CF\u8FF0\uFF1A\u7ED9\u4F60\u4E00\u68F5\u4E8C\u53C9\u641C\u7D22\u6811\uFF0C\u8BF7\u4F60\u8FD4\u56DE\u4E00\u68F5\u5E73\u8861\u540E\u7684\u4E8C\u53C9\u641C\u7D22\u6811\uFF0C\u65B0\u751F\u6210\u7684\u6811\u5E94\u8BE5\u4E0E\u539F\u6765\u7684\u6811\u6709\u7740\u76F8\u540C\u7684\u8282\u70B9\u503C\u3002 \u5982\u679C\u4E00\u68F5\u4E8C\u53C9\u641C\u7D22\u6811\u4E2D\uFF0C\u6BCF\u4E2A\u8282\u70B9\u7684\u4E24\u68F5\u5B50\u6811\u9AD8\u5EA6\u5DEE\u4E0D\u8D85\u8FC7 1 \uFF0C\u6211\u4EEC\u5C31\u79F0\u8FD9\u68F5\u4E8C\u53C9\u641C\u7D22\u6811\u662F\u5E73\u8861\u7684\u3002 \u5982\u679C\u6709\u591A\u79CD\u6784\u9020\u65B9\u6CD5\uFF0C\u8BF7\u4F60\u8FD4\u56DE\u4EFB\u610F\u4E00\u79CD\u3002</p></blockquote><blockquote><p>\u793A\u4F8B\uFF1A</p></blockquote><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/5/4/171e046bc8287d8b~tplv-t2oaga2asx-jj-mark:3024:0:0:0:q75.awebp" alt="img"> <img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/5/4/171e046d9a086675~tplv-t2oaga2asx-jj-mark:3024:0:0:0:q75.awebp" alt="img"></p><blockquote><p>\u8F93\u5165\uFF1Aroot = [1,null,2,null,3,null,4,null,null] \u8F93\u51FA\uFF1A[2,1,3,null,null,null,4] \u89E3\u91CA\uFF1A\u8FD9\u4E0D\u662F\u552F\u4E00\u7684\u6B63\u786E\u7B54\u6848\uFF0C[3,1,4,null,2,null,null] \u4E5F\u662F\u4E00\u4E2A\u53EF\u884C\u7684\u6784\u9020\u65B9\u6848\u3002</p></blockquote><blockquote><p>\u63D0\u793A\uFF1A \u6811\u8282\u70B9\u7684\u6570\u76EE\u5728 1 \u5230 10^4 \u4E4B\u95F4\u3002 \u6811\u8282\u70B9\u7684\u503C\u4E92\u4E0D\u76F8\u540C\uFF0C\u4E14\u5728 1 \u5230 10^5 \u4E4B\u95F4\u3002</p></blockquote><h3 id="\u601D\u8DEF\u5206\u6790" tabindex="-1">\u601D\u8DEF\u5206\u6790 <a class="header-anchor" href="#\u601D\u8DEF\u5206\u6790" aria-hidden="true">#</a></h3><p>\u8FD9\u9053\u9898\u4E4D\u4E00\u770B\u6709\u70B9\u552C\u4EBA\uFF0C\u53EF\u80FD\u4F1A\u76F4\u63A5\u5E72\u61F5\u4E00\u90E8\u5206\u540C\u5B66\u3002\u4E0D\u8FC7\u4E0D\u7528\u614C\u2014\u2014\u9898\u76EE\u518D\u65B0\uFF0C\u5957\u8DEF\u4F9D\u65E7\u3002\u53EA\u8981\u4F60\u5BF9\u6838\u5FC3\u8003\u70B9\u628A\u63E1\u5F97\u8DB3\u591F\u624E\u5B9E\uFF0C\u5B83\u5C31\u96BE\u4E0D\u5012\u4F60\u3002</p><p>\u6211\u4EEC\u6765\u5206\u6790\u4E00\u4E0B\u8FD9\u9053\u9898\u7684\u6838\u5FC3\u8BC9\u6C42\uFF1A\u8981\u6C42\u6211\u4EEC\u6784\u9020\u4E00\u68F5\u5E73\u8861\u7684\u4E8C\u53C9\u641C\u7D22\u6811\u3002\u5148\u629B\u5F00\u9898\u5E72\u4E2D\u5404\u79CD\u524D\u7F6E\u6761\u4EF6\u4E0D\u8C08\uFF0C\u5355\u770B\u8FD9\u4E2A\u8F93\u51FA\u7ED3\u679C\uFF0C\u4F60\u4F1A\u4E0D\u4F1A\u6709\u4E00\u79CD\u4F3C\u66FE\u76F8\u8BC6\u7684\u611F\u89C9\u5462\uFF1F\u6CA1\u9519\uFF0C\u5728\u4E0A\u4E00\u8282\u7684\u6700\u540E\u4E00\u9053\u771F\u9898\u4E2D\uFF0C\u6211\u4EEC\u4E5F\u6784\u9020\u8FC7\u8FD9\u6837\u7684\u4E00\u68F5\u4E8C\u53C9\u6811\u3002</p><p>\u90A3\u4E48\u8FD9\u4E24\u9053\u9898\u4E4B\u95F4\u4F1A\u4E0D\u4F1A\u6709\u4EC0\u4E48\u5FAE\u5999\u7684\u8054\u7CFB\u5462\uFF1F\u7B54\u6848\u662F\u4F1A\uFF0C\u4E0D\u7136\uFF0C\u7B14\u8005\u4E5F\u4E0D\u4F1A\u628A\u5B83\u4EEC\u653E\u5F97\u8FD9\u4E48\u8FD1\uFF08\u75AF\u72C2\u6697\u793A\uFF09\u3002\u4E24\u9053\u9898\u4E4B\u95F4\u552F\u4E00\u7684\u5DEE\u522B\u5728\u4E8E\u8F93\u5165\uFF1A\u5728\u6211\u4EEC\u5DF2\u7ECF\u505A\u8FC7\u7684\u90A3\u9053\u9898\u4E2D\uFF0C\u8F93\u5165\u53C2\u6570\u662F\u4E00\u4E2A\u6709\u5E8F\u6570\u7EC4\uFF1B\u800C\u8FD9\u9053\u9898\u4E2D\uFF0C\u8F93\u5165\u53C2\u6570\u662F\u4E00\u4E2A\u4E8C\u53C9\u641C\u7D22\u6811\u3002</p><p>\u5514\uFF0C\u518D\u60F3\u60F3\uFF01\u4E0A\u4E00\u8282\u90A3\u9053\u9898\u91CC\u7684\u201C\u6709\u5E8F\u6570\u7EC4\u201D\uFF0C\u548C\u773C\u524D\u8FD9\u9053\u9898\u91CC\u7684\u201C\u4E8C\u53C9\u641C\u7D22\u6811\u201D\u4E4B\u95F4\uFF0C\u4F1A\u4E0D\u4F1A\u6709\u4EC0\u4E48\u5999\u4E0D\u53EF\u8A00\u7684\u5173\u7CFB\u5462\uFF1F</p><p>\u522B\u5FD8\u4E86\uFF0C<strong>\u4E8C\u53C9\u641C\u7D22\u6811\u7684\u4E2D\u5E8F\u904D\u5386\u5E8F\u5217\u662F\u6709\u5E8F\u7684</strong>\uFF01\u6240\u8C13\u6709\u5E8F\u6570\u7EC4\uFF0C\u5B8C\u5168\u53EF\u4EE5\u7406\u89E3\u4E3A\u4E8C\u53C9\u641C\u7D22\u6811\u7684\u4E2D\u5E8F\u904D\u5386\u5E8F\u5217\u554A\uFF0C\u5BF9\u4E0D\u5BF9\uFF1F\u73B0\u5728\u6811\u90FD\u7ED9\u5230\u54B1\u4EEC\u624B\u91CC\u4E86\uFF0C\u6C42\u5B83\u7684\u4E2D\u5E8F\u904D\u5386\u5E8F\u5217\u662F\u4E0D\u662F\u975E\u5E38 easy\uFF1F\u5982\u679C\u80FD\u628A\u4E2D\u5E8F\u904D\u5386\u5E8F\u5217\u6C42\u51FA\u6765\uFF0C\u8FD9\u9053\u9898\u662F\u4E0D\u662F\u5C31\u8DDF\u4E4B\u524D\u505A\u8FC7\u90A3\u9053\u662F\u4E00\u6A21\u4E00\u6837\u7684\u89E3\u6CD5\u4E86\uFF1F</p><p>\u6CA1\u9519\uFF0C\u8FD9\u9053\u9898\u7684\u89E3\u9898\u601D\u8DEF\u6B63\u662F\uFF1A</p><ol><li>\u4E2D\u5E8F\u904D\u5386\u6C42\u51FA\u6709\u5E8F\u6570\u7EC4</li><li>\u9010\u4E2A\u5C06\u4E8C\u5206\u51FA\u6765\u7684\u6570\u7EC4\u5B50\u5E8F\u5217\u201C\u63D0\u201D\u8D77\u6765\u53D8\u6210\u4E8C\u53C9\u641C\u7D22\u6811</li></ol><h3 id="\u7F16\u7801\u5B9E\u73B0" tabindex="-1">\u7F16\u7801\u5B9E\u73B0 <a class="header-anchor" href="#\u7F16\u7801\u5B9E\u73B0" aria-hidden="true">#</a></h3><div class="language-js"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#676E95;">/**</span></span>
<span class="line"><span style="color:#676E95;"> * Definition for a binary tree node.</span></span>
<span class="line"><span style="color:#676E95;"> * function TreeNode(val, left, right) {</span></span>
<span class="line"><span style="color:#676E95;"> *     this.val = (val===undefined ? 0 : val)</span></span>
<span class="line"><span style="color:#676E95;"> *     this.left = (left===undefined ? null : left)</span></span>
<span class="line"><span style="color:#676E95;"> *     this.right = (right===undefined ? null : right)</span></span>
<span class="line"><span style="color:#676E95;"> * }</span></span>
<span class="line"><span style="color:#676E95;"> */</span></span>
<span class="line"><span style="color:#676E95;">/**</span></span>
<span class="line"><span style="color:#676E95;"> * </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">param</span><span style="color:#676E95;"> </span><span style="color:#89DDFF;">{</span><span style="color:#FFCB6B;">TreeNode</span><span style="color:#89DDFF;">}</span><span style="color:#676E95;"> </span><span style="color:#A6ACCD;">root</span></span>
<span class="line"><span style="color:#676E95;"> * </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">return</span><span style="color:#676E95;"> </span><span style="color:#89DDFF;">{</span><span style="color:#FFCB6B;">TreeNode</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;"> */</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> balanceBST </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">nums</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> []</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">inOrder</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">root</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">return</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">inOrder</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">left</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">nums</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">val</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">inOrder</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">right</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">buildAVL</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">low</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">high</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">low</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">high</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">null</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">mid</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">floor</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">low</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">high</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">low</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">/</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">2</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">cur</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">TreeNode</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">nums</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">mid</span><span style="color:#F07178;">])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">cur</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">left</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">buildAVL</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">low</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">mid</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">cur</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">right</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">buildAVL</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">mid</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">high</span><span style="color:#F07178;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">cur</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">inOrder</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">root</span><span style="color:#F07178;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">buildAVL</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">nums</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre></div>`,16)]))}const A=n(o,[["render",e]]);export{i as __pageData,A as default};
